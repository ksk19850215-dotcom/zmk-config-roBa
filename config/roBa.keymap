#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "symbols.h"

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <3>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro_1985: macro_1985 {
            label = "macro_1985";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N9 &kp N8 &kp N5 &kp N0 &kp N2 &kp N1 &kp N5 &kp ENTER>;
        };

        macro_pass: macro_pass {
            label = "macro_pass";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Z) &kp S &kp E &kp N4 &kp N5 &kp N6 &kp T &kp F &kp C &kp X &kp ENTER>;
        };

        macro_bcc11703: macro_bcc11703 {
            label = "macro_bcc11703";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp C &kp C &kp N1 &kp N1 &kp N7 &kp N0 &kp N3 &kp TAB>;
        };

        macro_logon: macro_logon {
            label = "macro_logon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp C &kp C &kp N1 &kp N1 &kp N7 &kp N0 &kp N3 &kp TAB &kp LS(Z) &kp S &kp E &kp N4 &kp N5 &kp N6 &kp T &kp F &kp C &kp X &kp ENTER>;
        };

        macro_line: macro_line {
            label = "macro_line";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp N3 &kp M &kp N &kp N4 &kp V &kp A &kp ENTER>;
        };

        macro_any: macro_any {
            label = "macro_any";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N5) &kp B &kp C &kp C &kp N1 &kp N1 &kp N7 &kp N0 &kp N3 &kp S &kp ENTER>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 5 Q       &kp W         &kp E         &kp R      &kp T                                          &kp Y       &kp U  &kp I     &kp O     &kp P
&kp A         &kp S         &kp D         &kp F      &kp G        &trans           &mkp MB3         &kp H       &kp J  &kp K     &kp L     &lt 3 MINUS
&mt LSHIFT Z  &kp X         &kp C         &kp V      &kp B        &kp LANG1        &kp LANG2        &kp N       &kp M  &mkp MB1  &mkp MB2  &mt LSHIFT SLASH
&kp LCTRL     &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 TAB  &lt 2 LANG5  &lt 1 SPACE      &mt LCTRL ENTER  &lt 2 BSPC                             &lt 3 INT_MUHENKAN
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp LS(N1)    &kp LS(N2)         &kp LS(N3)     &kp LS(N4)     &kp LS(N5)                                    &kp LS(N6)     &kp LS(N8)     &kp LS(N9)     &kp LS(N7)      &kp LS(N0)
&kp LBKT      &kp LG(LS(S))      &trans         &kp EQUAL      &kp LS(GRAVE)      &trans      &trans         &kp BACKSLASH  &kp LS(MINUS)  &kp LC(SEMI)   &kp LS(SQT)     &kp SEMICOLON
&kp RS(RBKT)  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LA(LC(V))  &kp LC(SEMICOLON)  &trans      &trans         &kp COMMA      &kp DOT        &kp LS(COMMA)  &kp LS(PERIOD)  &kp QUESTION
&trans        &trans             &trans         &trans         &trans             &trans      &kp LC(ENTER)  &kp DEL                                                      &trans
            >;
        };

        NUM {
            bindings = <
&kp ESC        &kp N7     &kp N8   &kp N9  &kp MINUS                                     &kp LC(HOME)  &kp HOME      &kp UP        &kp END       &kp LC(END)
&kp LS(LCTRL)  &kp N4     &kp N5   &kp N6  &kp LS(MINUS)  &trans          &trans         &kp PAGE_UP   &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN
&kp LS(CAPS)   &kp N1     &kp N2   &kp N3  &kp N0         &trans          &trans         &kp TAB       &kp LEFT_WIN  &kp LC(PGUP)  &kp LC(PGDN)  &kp TAB
&trans         &kp COMMA  &kp DOT  &trans  &trans         &kp LA(F7)      &kp LC(ENTER)  &kp LSHIFT                                              &trans
            >;
        };

        MOUSE {
            bindings = <
&kp C_MUTE         &kp F7  &kp F8  &kp F9   &kp F10                         &macro_pass   &kp RS(RBKT)  &kp BACKSLASH  &macro_line    &macro_any
&kp C_VOLUME_UP    &kp F4  &kp F5  &kp F6   &kp F11  &trans      &trans     &macro_logon  &macro_1985   &trans         &kp F5         &trans
&kp C_VOLUME_DOWN  &kp F1  &kp F2  &kp F3   &kp F12  &trans      &trans     &kp LC(F4)    &kp LA(LEFT)  &kp LA(LEFT)   &kp LA(RIGHT)  &trans
&trans             &trans  &trans  &kp INS  &trans   &trans      &kp LG(R)  &kp LG(D)                                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2           &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
